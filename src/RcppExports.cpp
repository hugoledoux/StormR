// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// willoughby_cpp
NumericVector willoughby_cpp(NumericVector r, double rmw, double msw, double lat);
RcppExport SEXP _StormR_willoughby_cpp(SEXP rSEXP, SEXP rmwSEXP, SEXP mswSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type rmw(rmwSEXP);
    Rcpp::traits::input_parameter< double >::type msw(mswSEXP);
    Rcpp::traits::input_parameter< double >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(willoughby_cpp(r, rmw, msw, lat));
    return rcpp_result_gen;
END_RCPP
}
// holland_cpp
NumericVector holland_cpp(NumericVector r, double rmw, double msw, double pc, double poci, double lat);
RcppExport SEXP _StormR_holland_cpp(SEXP rSEXP, SEXP rmwSEXP, SEXP mswSEXP, SEXP pcSEXP, SEXP pociSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type rmw(rmwSEXP);
    Rcpp::traits::input_parameter< double >::type msw(mswSEXP);
    Rcpp::traits::input_parameter< double >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< double >::type poci(pociSEXP);
    Rcpp::traits::input_parameter< double >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(holland_cpp(r, rmw, msw, pc, poci, lat));
    return rcpp_result_gen;
END_RCPP
}
// boose_cpp
NumericVector boose_cpp(NumericVector r, double rmw, double msw, double pc, double poci, double x, double y, double vx, double vy, double vh, double landIntersect, double lat);
RcppExport SEXP _StormR_boose_cpp(SEXP rSEXP, SEXP rmwSEXP, SEXP mswSEXP, SEXP pcSEXP, SEXP pociSEXP, SEXP xSEXP, SEXP ySEXP, SEXP vxSEXP, SEXP vySEXP, SEXP vhSEXP, SEXP landIntersectSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type rmw(rmwSEXP);
    Rcpp::traits::input_parameter< double >::type msw(mswSEXP);
    Rcpp::traits::input_parameter< double >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< double >::type poci(pociSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type vx(vxSEXP);
    Rcpp::traits::input_parameter< double >::type vy(vySEXP);
    Rcpp::traits::input_parameter< double >::type vh(vhSEXP);
    Rcpp::traits::input_parameter< double >::type landIntersect(landIntersectSEXP);
    Rcpp::traits::input_parameter< double >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(boose_cpp(r, rmw, msw, pc, poci, x, y, vx, vy, vh, landIntersect, lat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StormR_willoughby_cpp", (DL_FUNC) &_StormR_willoughby_cpp, 4},
    {"_StormR_holland_cpp", (DL_FUNC) &_StormR_holland_cpp, 6},
    {"_StormR_boose_cpp", (DL_FUNC) &_StormR_boose_cpp, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_StormR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
